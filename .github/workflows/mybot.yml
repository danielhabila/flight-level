name: Node.js CI

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: |
            client/node_modules
            server/node_modules
            client/package-lock.json
            server/package-lock.json
            client/package.json
            server/package.json
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/package.json') }}

      - name: Create env file in client
        run: |
          cd client
          echo VITE_AUTH0_DOMAIN=${{ secrets.VITE_AUTH0_DOMAIN }} >> .env
          echo VITE_AUTH0_CLIENTID=${{ secrets.VITE_AUTH0_CLIENTID }} >> .env

      - name: Create env file in server
        run: |
          cd server
          echo MONGODB_URL=${{ secrets.MONGODB_URL }} >> .env
          echo TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} >> .env
          echo TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }} >> .env

          echo CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }} >> .env
          echo CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }} >> .env
          echo CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }} >> .env

          echo HYGRAPH_ENDPOINT=${{ secrets.HYGRAPH_ENDPOINT }} >> .env

      - name: Install client dependencies
        run: |
          cd client
          npm install
          npm run build

      - name: Install server dependencies
        run: |
          cd server
          npm install

      - name: Restart pm2
        run: |
          cd server
          pm2 restart 0
